{"ast":null,"code":"var _jsxFileName = \"/Users/SaraMBP/Coding/github/fso-react/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; // import useState from 'react';\n\nconst App = () => {\n  const [all, setAll] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    average: 0,\n    positive: 0\n  });\n\n  const handleGood = () => {\n    setAll({ ...all,\n      good: all.good + 1,\n      total: all.total + 1,\n      average: all.total / 3,\n      positive: all.good / all.total * 100\n    });\n  };\n\n  const handleNeutral = () => {\n    setAll({ ...all,\n      neutral: all.neutral + 1,\n      total: all.total + 1,\n      average: all.total / 3\n    });\n  };\n\n  const handleBad = () => {\n    setAll({ ...all,\n      bad: all.bad + 1,\n      total: all.total + 1,\n      average: all.total / 3\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleGood,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleNeutral,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBad,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Button = ({\n  onClick,\n  text\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 39\n  }\n}, text); //   return (\n//     <div>\n//       <div>\n//         {left}\n//         <Button onClick={handleLeftClick} text='left' />\n//         <Button onClick={handleRightClick} text='right' />\n//         {right}\n//         <History allClicks={allClicks} />\n//       </div>\n//     </div>\n//   );\n// };\n// \n\n\nconst Statistics = ({\n  good,\n  bad,\n  neutral,\n  total\n}) => {\n  // const all = good + bad + neutral\n  if (total === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, \"No feedback given\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    text: \"good\",\n    good: good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Stat = // const Button = ({ onClick, text }) => (\n//   <button onClick={onClick}>{text}</button>\n// )\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/SaraMBP/Coding/github/fso-react/part1/src/index.js"],"names":["React","useState","ReactDOM","App","all","setAll","good","neutral","bad","total","average","positive","handleGood","handleNeutral","handleBad","Button","onClick","text","Statistics","Stat","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n// import useState from 'react';\n\nconst App = () => {\n  const [all, setAll] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    average: 0,\n    positive: 0\n  });\n\n  const handleGood = () => {\n    setAll({\n      ...all,\n      good: all.good + 1,\n      total: all.total + 1,\n      average: all.total / 3,\n      positive: (all.good / all.total) * 100\n    })\n  };\n  const handleNeutral = () => {\n    setAll({...all,\n    neutral: all.neutral + 1,\n    total: all.total + 1,\n    average: all.total / 3\n    })\n  };\n  const handleBad = () => {\n    setAll({\n    ...all,\n    bad: all.bad + 1,\n    total: all.total + 1,\n    average: all.total / 3\n    })\n  };\n\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button onClick={handleGood} text=\"good\" />\n      <Button onClick={handleNeutral} text=\"neutral\" />\n      <Button onClick={handleBad} text=\"bad\" />\n      <p>Statistics</p>\n      <Statistics />\n      {/* <p>good {all.good}</p>\n      <p>neutral {all.neutral}</p>\n      <p>bad {all.bad}</p>\n      <p>all {all.total}</p>\n      <p>plus {all.positive}%</p> */}\n    </div>\n  );\n};\n\nconst Button = ({ onClick, text }) => <button onClick={onClick}>{text}</button>;\n\n\n//   return (\n//     <div>\n//       <div>\n//         {left}\n//         <Button onClick={handleLeftClick} text='left' />\n//         <Button onClick={handleRightClick} text='right' />\n//         {right}\n//         <History allClicks={allClicks} />\n//       </div>\n//     </div>\n//   );\n// };\n// \nconst Statistics = ({ good, bad, neutral, total }) => {\n  // const all = good + bad + neutral\n  if(total === 0){\n    return (\n      <div>\n        No feedback given\n        </div>\n    )\n  }\n  return (\n    <div>\n      <Stat text='good' good={good} />\n    </div>\n  )\n}\n\nconst Stat = \n\n// const Button = ({ onClick, text }) => (\n//   <button onClick={onClick}>{text}</button>\n// )\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}